#ifndef _MAIN_H_
#define _MAIN_H_


#define RC_NVIC 4
#define CAN1_NVIC 3
#define CAN2_NVIC 3




/*
*********************************************************************************************************
* SYSTEM
*********************************************************************************************************
*/
#include "sys.h"
#include "delay.h"
#include "usart.h"

/*
*********************************************************************************************************
* 标准库
*********************************************************************************************************
*/
#include "stm32f4xx.h"
#include <stdarg.h>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>

/*
*********************************************************************************************************
* OS
*********************************************************************************************************
*/
#include "FreeRTOS.h"
#include "task.h"
#include "queue.h"
#include "croutine.h"
#include "FreeRTOSConfig.h"
/*
*********************************************************************************************************
* Math
*********************************************************************************************************
*/
//#include "pid.h"
////#include "arm_math.h"
////#include "user_lib.h"
//#include "kalman.h"
//#include "kalman_filter.h"
//#include "Ramp_Control.h"
/*
*********************************************************************************************************
* HardWare
*********************************************************************************************************
*/
#include "led.h"
#include "rc.h"
#include "can.h"
/*
*********************************************************************************************************
* Task
*********************************************************************************************************
*/
#include "start_task.h"
#include "Remote_Control.h"
#include "CAN_Receive.h"
//#include "IMUTask.h"
//#include "gimbal_task.h"
#include "chassis_task.h"
//#include "shoot_task.h"
#include "data_process_task.h"

#define VAL_LIMIT(val, min, max) \
  do                             \
  {                              \
    if ((val) <= (min))          \
    {                            \
      (val) = (min);             \
    }                            \
    else if ((val) >= (max))     \
    {                            \
      (val) = (max);             \
    }                            \
  } while (0)

void Task_Init(void);

#endif

